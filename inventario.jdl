/** Product sold by the Online store */
entity Producto
{
    nombre String required
    descripcion String
    precioCompra BigDecimal required min(0)
    precioVenta BigDecimal required min(0)
    estado EstadoProducto
   // image ImageBlob
}

entity Stock
{
  cantidad Long required min(0)

}

entity ProductoDetalle{

   codigo String

}

enum EstadoProducto{
 ACTIVO, INACTIVO, AGOTADO

}

entity Sucursal{
  nombre String required
  direccion String required


}
entity Usuario{
	segundoNombre String
    segundoApellido String
    numDocumento String required maxlength(15)
    celular String required
    direccion String
    genero Genero

}

entity TipoLista {
	nombre String required
    descripcion String maxlength(500)
}

entity ElementoLista {
	nombre String required maxlength(200)
    codigo String required maxlength(5)
    /*
    * posibles propiedades que pueda tener el elemento
    * de la lista, ej. {key: value}
    */
    propiedades Blob
}


entity ProductoCategoria {
    nombre String required
    descripcion String
}

enum Genero {
    HOMBRE, MUJER
}

relationship OneToOne {
    Customer{user} to User
}

relationship ManyToOne {
  OrderItem{producto} to Producto
}

relationship OneToMany {
   Customer{order} to ProductOrder{customer},
   ProductOrder{orderItem} to OrderItem{order},
   ProductOrder{invoice} to Invoice{order},
   Invoice{shipment} to Shipment{invoice},
   ProductoCategoria{producto} to Producto{ProductoCategoria}
}
relationship OneToOne {
   Customer{user(login)} to User
}

relationship ManyToOne {
   OrderItem{producto(name)} to Producto
}

relationship OneToMany {
   Customer{order} to ProductOrder{customer(email)},
   ProductOrder{orderItem} to OrderItem{order(code)},
   ProductOrder{invoice} to Invoice{order(code)},
   Invoice{shipment} to Shipment{invoice(code)},
   ProductoCategoria{producto} to Producto{ProductoCategoria(name)}
}


dto * with mapstruct
paginate * with pagination
service * with serviceClass
filter *
